
# load the realtime components

	loadrt [KINS]KINEMATICS
	loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS num_spindles=[TRAJ]SPINDLES
	loadrt remora
	loadrt plasmac	
    loadrt dbounce names=db_breakaway,db_float,db_ohmic,db_arc-ok
	loadrt or2 count=3
	loadrt not count=1

	setp plasmac.debug-print 1
#load the GC python script
	loadusr -Wn GC ~/cn-seamless/GasControl/gascontrol.py
	net Pierce GC.Pierce motion.digital-in-00 or2.1.out
    net CutConfirmation spindle.0.at-speed GC.ReadyToCutConfirmation plasmac.spindle-at-speed#TRUE when manifold sends verification of torch being on
    net plasmac:cutting-start spindle.0.on GC.FlameCommandOn # TRUE when M3 
	net ProbeReturn or2.0.in0 GC.ProbeDetected
	net fucked or2.2.out or2.0.in1
	
#load hal input for cn-seamless controller
#
#
	#loadusr -W hal_input -KRA  CNSeamless 
#	net jog_z_up  input.0.btn-a
#	net jog_z_down  input.0.btn-y
#	net feed_up input.0.btn-tl
##	net feed_down  input.0.btn-left
#	net cycle_start  input.0.btn-extra
#	net feed_hold input.0.btn-forward 
#	
#	net jog-y-analog input.0.abs-y-position
#	net jog-x-analog input.0.abs-x-position
	
	net tits motion.motion-enabled proto2kins.motion-enabled

# estop loopback, SPI comms enable and feedback
	net user-enable-out 	<= remora.SPI-enable  iocontrol.0.user-enable-out	#	=> remora.SPI-enable 
	net remora-status 	<= remora.SPI-status 		=> iocontrol.0.emc-enable-in 
	
	net iflag proto2kins.iflag remora.enable-pose.0

# add the remora and motion functions to threads

	#read position feedback
	addf remora.read servo-thread
	addf plasmac servo-thread
	addf motion-command-handler servo-thread
	addf motion-controller servo-thread
	addf remora.write servo-thread
	addf db_ohmic servo-thread
	addf or2.0 base-thread
	addf or2.1 base-thread
	addf or2.2 base-thread
	addf not.0 base-thread
	#write position feedback

	setp proto2kins.D2 [MACHINE_DIMENSIONS]ARM1_LENGTH
	setp proto2kins.D4 [MACHINE_DIMENSIONS]ARM2_LENGTH
	setp proto2kins.D1 0
	setp proto2kins.D3 0
	setp proto2kins.D5 0
	setp proto2kins.D6 0
	
# Joint 0 setup
	net plasmac:axis-position joint.2.pos-fb => plasmac.axis-z-position

	setp remora.joint.0.scale 		[JOINT_0]SCALE
	setp remora.joint.0.maxaccel 	[JOINT_0]STEPGEN_MAXACCEL
    setp remora.joint.0.home-degs [JOINT_0]HOME_DEGS

	net j0pos-cmd 		<= joint.0.motor-pos-cmd 	=> remora.joint.0.pos-cmd  
	net j0pos-fb 		<= remora.joint.0.pos-fb 	=> joint.0.motor-pos-fb
	net j0enable 		<= joint.0.amp-enable-out 	=> remora.joint.0.enable #halui.joint.0.home
	
	


# Joint 1 setup

	setp remora.joint.1.scale 		[JOINT_1]SCALE
	setp remora.joint.1.maxaccel 	[JOINT_1]STEPGEN_MAXACCEL
    setp remora.joint.1.home-degs [JOINT_1]HOME_DEGS
	
	net j1pos-cmd 		<= joint.1.motor-pos-cmd 	=> remora.joint.1.pos-cmd
	net j1pos-fb 		<= remora.joint.1.pos-fb 	=> joint.1.motor-pos-fb 
	net j1enable 		<= joint.1.amp-enable-out 	=> remora.joint.1.enable #halui.joint.1.home

 #Joint 2 setup

	setp remora.joint.2.scale 		[JOINT_2]SCALE
	setp remora.joint.2.maxaccel 	[JOINT_2]STEPGEN_MAXACCEL

	net j2pos-cmd 		<= joint.2.motor-pos-cmd 	=> remora.joint.2.pos-cmd
	net j2pos-fb 		<= remora.joint.2.pos-fb 	=> joint.2.motor-pos-fb
	net j2enable 		<= joint.2.amp-enable-out #halui.joint.2.home
	net rawj2home remora.input.0 not.0.in
	net j2home not.0.out     joint.2.home-sw-in
	
	setp remora.joint.2.enable 1


