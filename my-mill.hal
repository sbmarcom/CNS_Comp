
# load the realtime components

	loadrt [KINS]KINEMATICS
	loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
	loadrt remora


# estop loopback, SPI comms enable and feedback
	net user-enable-out 	<= iocontrol.0.user-enable-out		=> remora.SPI-enable
	net user-request-enable <= iocontrol.0.user-request-enable	=> remora.SPI-reset
	net remora-status 	<= remora.SPI-status 			=> iocontrol.0.emc-enable-in
	

# add the remora and motion functions to threads

	#read position feedback
	addf remora.read servo-thread
	addf motion-command-handler servo-thread
	addf motion-controller servo-thread
	#write position feedback
	addf remora.write servo-thread


# Joint 0 setup

	setp remora.joint.0.scale 		[JOINT_0]SCALE
	setp remora.joint.0.maxaccel 	[JOINT_0]STEPGEN_MAXACCEL

	net j0pos-cmd 		<= joint.0.motor-pos-cmd 	=> remora.joint.0.pos-cmd  
	net j0pos-fb 		<= remora.joint.0.pos-fb 	=> joint.0.motor-pos-fb
	net j0enable 		<= joint.0.amp-enable-out 	=> remora.joint.0.enable


# Joint 1 setup

	setp remora.joint.1.scale 		[JOINT_1]SCALE
	setp remora.joint.1.maxaccel 	[JOINT_1]STEPGEN_MAXACCEL

	net j1pos-cmd 		<= joint.1.motor-pos-cmd 	=> remora.joint.1.pos-cmd
	net j1pos-fb 		<= remora.joint.1.pos-fb 	=> joint.1.motor-pos-fb 
	net j1enable 		<= joint.1.amp-enable-out 	=> remora.joint.1.enable


## Joint 2 setup
#
#	setp remora.joint.2.scale 		[JOINT_2]SCALE
#	setp remora.joint.2.maxaccel 	[JOINT_2]STEPGEN_MAXACCEL
#
#	net j2pos-cmd 		<= joint.2.motor-pos-cmd 	=> remora.joint.2.pos-cmd
#	net j2pos-fb 		<= remora.joint.2.pos-fb 	=> joint.2.motor-pos-fb
#	net j2enable 		<= joint.2.amp-enable-out 	=> remora.joint.2.enable
